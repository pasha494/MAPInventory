@using MAP.Inventory.ModelImple;

@{
    ViewBag.Title = "GridViewCustomization";

    MapGridViewImple objGridView = new MapGridViewImple(0);
    Dictionary<int, string> items = objGridView.GetGridViewNames();
    int[] keys = items.Keys.ToArray();
}

<form role="search" id="frmGridViewsCustomization" class="cmxform">
    <div class="row-fluid heading">
        <div class="span12">
            <h2 class="pull-left">Grid Views</h2>

            <div class="pull-right">
                <a id="btnSave" class="btn btn-default">Save</a>
                <a id="btnClear" class="btn btn-default">Clear</a>
                <a id="btnAdd" class="btn btn-default pull-right">Add</a>
            </div>
        </div>
    </div>

    <div class="row-fluid">
        <div class="span2">
            <label for="txtCode" class="label">Grid View Names</label>
        </div>
        <div class="span8">
            <select class="form-control mousetrap" id="drpGridViews">
                <option value="0">-------- select Name -------- </option>
                @if (keys != null && keys.Length > 0)
                {
                    for (int i = 0; i < keys.Length; i++)
                    {

                        <option value="@keys[i].ToString()"> @items[keys[i]]</option>
                    }
                }

            </select>
        </div>
    </div>

    <div class="row-fluid">
        <div class="span6">
            <label for="txtCode" class="label">Total rows</label>
            <input type="text" class="form-control mousetrap" name="txtTotalRows" id="txtTotalRows" placeholder="Default rows is 20">
        </div>
        <div class="span6">
            <label for="txtCode" class="label">Grid Height</label>
            <input type="text" class="form-control mousetrap" name="txtPanelWidth" id="txtHeight" placeholder="Default panel width is 500">
        </div>
    </div>

    <div class="row-fluid" style="padding-top:50px;">

        <div class="span12">
            <table class="table" id="tblGridData">
                <thead>
                    <tr>
                        <th>Field Name</th>
                        <th>Field Text</th>
                        <th>Show Totals</th>
                        <th>Editor Type</th>
                        <th>Width</th>
                        <th>Formula</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>

    <script type="text/javascript">
        var data = [];
        $(function () {

            var drpGridViews = $("#drpGridViews");

            // dropdown change logic
            drpGridViews.on('change', function (e) {
                 
                e.preventDefault();
                clearControls();
                getScreenData(); 
            });

            // load the data with the controls
            var getScreenData = function () {
                var _FeatureId = drpGridViews.val();
                if (_FeatureId > 0) {
                    $.ajax({
                        url: '/Admin/GetGridViewCustomizationData',
                        type: 'GET',
                        data: { FeatureId: _FeatureId },
                        success: function (res) {
                            debugger
                            if (res)
                                populateModelData($.parseJSON(res));

                        },
                        beforeSend: function () {
                            loadAjaxImg(true);
                        },
                        complete: function () { loadAjaxImg(false); },
                        error: function (e) {
                            customAlert('Error in Saving..', 'alert');
                        }
                    });
                }

            };

            // load the data based on dropdown selection
            var populateModelData = function (model) {
                if (model) { 
                    // header fields
                    if (model.TotalRows)
                        $("#txtTotalRows").val(model.TotalRows);

                    if (model.Height)
                        $("#txtHeight").val(model.Height);

                    var gridData = JSON.parse(model.Columns);

                    if (gridData && gridData.length) {
                        var tr = '';

                        for (var i = 0; i < gridData.length; i++) {

                            tr += ' <tr>';

                            // first cell
                            tr += ' <td>' + gridData[i].field + '</td>';

                            // second cell
                            tr += ' <td><input type="text" id="txtName' + i + '" value="' + gridData[i].name + '" placeholder="Default name will be field name"/></td>';


                            // // Third cell show totals
                            tr += ' <td><input type="checkbox" id="chkShowTotals' + i + '" class="select_row"';
                            if (gridData[i].hasTotals === true) {
                                tr += 'checked="checked"'
                            }
                            else if (!gridData[i].isDecimal) {
                                tr += 'readonly="readonly" disabled'
                            }

                            tr += '/> </td>';

                            // fourth cell
                            if (gridData[i].isStatic === false) {
                                tr += ' <td>';
                                if (gridData[i].editorTpye == 'Empty') {
                                    tr += ' <select id="drpEditorType' + i + '"><option  val="Empty" selected="selected" >Empty</option>   <option  val="String">String</option><option  val="Decimal">Decimal</option></select>';
                                }
                                else if (gridData[i].editorTpye == 'String') {
                                    tr += ' <select id="drpEditorType' + i + '"><option  val="Empty" selected="selected" >Empty</option>   <option  val="String">String</option><option  val="Decimal">Decimal</option></select>';
                                }
                                else if (gridData[i].editorTpye == 'Decimal') {
                                    tr += ' <select id="drpEditorType' + i + '"><option  val="Empty" selected="selected" >Empty</option>   <option  val="String">String</option><option  val="Decimal">Decimal</option></select>';
                                }
                                tr += '</td>';
                            }
                            else {
                                tr += '<td></td>';
                            }



                            //  fifth cell
                            tr += ' <td><input type="text" id="txtWidth' + i + '" value="' + gridData[i].width + '"  placeholder="Default width 80"/></td>';

                            //sixth cell
                            tr += '<td> ';
                            if (gridData[i].formula) {
                                tr += '  <input type="text" id="txtFormula' + i + '" value="' + gridData[i].formula + '"  placeholder="Default width 80"/> ';
                            }
                            tr += ' </td>';

                            // seventh cell
                            tr += ' <td></td>';

                            tr += ' </tr>';
                        }

                        $("#tblGridData>tbody").append(tr);

                    }
                }
            }






            // buttons click logic

            $("#btnSave").on('click', function (e) {
                e.preventDefault();
                // saveData();

            });

            $("#btnClear").on('click', function (e) {
                e.preventDefault();
                clearControls();
                $("#drpGridViews").val("0");


            });

            // clear contorls 1. remove all the options from dropdowns and make the text box value as empty and remove all the rows from the table
            var clearControls = function () { 
                // load the header field data
                $("#txtTotalRows").val("");
                $("#txtHeight").val("");  
                $("#tblGridData>tbody").empty();

            }

            // data save logic
            var saveData = function () {
                if (validate()) {
                    buildData();
                    $.ajax({
                        url: '/Admin/SaveListViewCutomization',
                        type: 'POST',
                        data: { model: JSON.stringify(_item) },
                        success: function (res) {
                            debugger
                            if (res != "-494") {
                                customAlert('Data saved successfully', 'alert', function () { $("#drpListViews").focus(); });
                                clearControls();
                            }
                            else
                                customAlert('Error occured while saving. Please contact administrator.');
                        },
                        beforeSend: function () {
                            loadAjaxImg(true);
                        },
                        complete: function () { loadAjaxImg(false); },
                        error: function (e) {
                            customAlert('Error in Saving..', 'alert');
                        }
                    });
                }
            };

            //validate the data
            var validate = function () {
                // header fields
                var flg = true;
                if ($("#drpDefaultText").val() == "") {
                    flg = false;
                    customAlert("selected Invalid Text", 'alert', function () { $("#drpDefaultText").focus(); });
                }
                else if ($("#drpDefaultSearch").val() == "") {
                    flg = false;
                    customAlert("selected Invalid Text", 'alert', function () { $("#drpDefaultSearch").focus(); });
                }

                return true;
            };

            //build the data
            var buildData = function () {
                debugger
                // header fields
                _item.TotalRows = $("#txtTotalRows").val() ? parseInt($("#txtTotalRows").val()) : 20;
                _options.panelWidth = $("#txtPanelWidth").val() ? parseInt($("#txtPanelWidth").val()) : 500;
                _options.searchField = $("#drpDefaultSearch").val();
                _options.textField = $("#drpDefaultText").val();

                // table fields (bind column properties)
                $("#tblColumns>tbody>tr").each(function (i, tr) {

                    var checkbox = $(tr).find('#chkHidden' + i);
                    var txtTitle = $(tr).find('#txtTitle' + i);
                    var drpAlign = $(tr).find('#drpAlign' + i);
                    var txtWidth = $(tr).find('#txtWidth' + i);


                    _options.columns[0][i].hidden = checkbox.attr("checked") == "checked" ? false : true;
                    _options.columns[0][i].title = txtTitle.val() ? txtTitle.val() : _options.columns[0][i].field;
                    _options.columns[0][i].align = drpAlign.val() ? drpAlign.val() : 'left';
                    _options.columns[0][i].width = txtWidth.val() ? txtWidth.val() : 80;

                });

                _item.Options = JSON.stringify(_options);
            };
        });

    </script>
</form>

