@model MAP.Inventory.Model.ProductsModel

@using MAP.Inventory.Model;
@using System.Data;
@using MAP.Inventory.ModelImple;
@{
    LookUps _LookUps = new LookUps();
    ViewBag.Title = "Products";
    DataTable dt = _LookUps.GetProductCategies();
    DataTable dtStatus = _LookUps.GetLookUps(1);// look up id for status=1
    SessionManager objSession = null;
    if (Session["SessionManager"] != null)
    {
        objSession = (SessionManager)Session["SessionManager"];
    }

}

<form role="search" id="frmProducts" class="cmxform">

    @if (Model.ProductID > 0)
    {
        <div class="row-fluid heading">
            <div class="span12">
                <h2 class="pull-left">Edit Product</h2>

                <div class="pull-right">

                    @if (objSession.RoleFeatures != null && objSession.RoleFeatures.ContainsKey("SaveProduct") && objSession.RoleFeatures["SaveProduct"])
                    {
                        <button type="submit" class="btn btn-default" id="btnSaveProduct">  Save </button>
                    }

                    @if (objSession.RoleFeatures != null && objSession.RoleFeatures.ContainsKey("ClearProduct") && objSession.RoleFeatures["ClearProduct"])
                    {
                        <button class="btn btn-default" id="btnClear">Reset</button>
                    }

                    @if (objSession.RoleFeatures != null && objSession.RoleFeatures.ContainsKey("CancelProduct") && objSession.RoleFeatures["CancelProduct"])
                    {
                        <a class="btn btn-default" href="@Url.Action("Index", "Home")">Cancel</a>
                    }

                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row-fluid heading">
            <div class="span12">
                <h2 class="pull-left">Add Product</h2>

                <div class="pull-right">

                    @if (objSession.RoleFeatures != null && objSession.RoleFeatures.ContainsKey("SaveProduct") && objSession.RoleFeatures["SaveProduct"])
                    {
                        <button type="submit" class="btn btn-default" id="btnSaveProduct">  Save </button>
                    }

                    @if (objSession.RoleFeatures != null && objSession.RoleFeatures.ContainsKey("ClearProduct") && objSession.RoleFeatures["ClearProduct"])
                    {
                        <button class="btn btn-default" id="btnClear">Reset</button>
                    }

                    @if (objSession.RoleFeatures != null && objSession.RoleFeatures.ContainsKey("CancelProduct") && objSession.RoleFeatures["CancelProduct"])
                    {
                        <a class="btn btn-default" href="@Url.Action("Index", "Home")">Cancel</a>
                    }

                </div>
            </div>
        </div>
    }


    @Html.HiddenFor(m => m.ProductID)

    <div class="row-fluid">

        <div class="span4">
            <label for="txtCode" class="label1">Product Code</label>
            <input type="text" class="span12 form-control mousetrap" name="txtCode" id="txtCode" placeholder="Product Code.." value="@Model.Code">
        </div>

        <div class="span4">
            <label for="txtName" class="label1">Product Name</label>
            <input type="text" class="span12 form-control mousetrap" name="txtName" id="txtName" placeholder="Product Name.." value="@Model.Name">
        </div>

        <div class="span4">
            <label for="drpCategory" class="label1">Category</label>
            <select class="span12 form-control mousetrap" name="drpCategory" id="drpCategory">
                <option value="0">------Select category------</option>
                @if (dt != null && dt.Rows.Count > 0)
                {
                    for (int i = 0; i < dt.Rows.Count; i++)
                    {
                        if (Model.ProductCategory != 0 && Model.ProductCategory == Convert.ToInt32(dt.Rows[i]["id"].ToString()))
                        {
                            <option selected="selected" value="@dt.Rows[i]["id"].ToString()">@dt.Rows[i]["Name"].ToString()</option>
                        }
                        else
                        {
                            <option value="@dt.Rows[i]["id"].ToString()">@dt.Rows[i]["Name"].ToString()</option>
                        }
                    }
                }
            </select>
        </div>

    </div>


    <div class="row-fluid">

        <div class="span4">
            <label for="txtPrice" class="label1">Price</label>
            <input type="text" class="span12 form-control mousetrap" name="txtPrice" id="txtPrice" placeholder="Product Price.." value="@(Model.Price == 0?"": Model.Price.ToString() )">
        </div>

        <div class="span4">
            <label for="txtSpec" class="label1">Transport</label>
            <input type="text" class="span12 form-control mousetrap" name="txtSpec" id="txtSpec" placeholder="Specification.." value="@Model.Spec">
        </div>

        <div class="span4">
            <label class="label1" for="drpStatus">Status</label>

            <select class="span12 form-control mousetrap " name="drpStatus" id="drpStatus">
                @if (dtStatus != null && dtStatus.Rows.Count > 0)
                {
                    for (int i = 0; i < dtStatus.Rows.Count; i++)
                    {

                        if (Model.Status != 0 && Model.Status == Convert.ToInt32(dtStatus.Rows[i]["NodeNo"].ToString()))
                        {
                            <option selected="selected" value="@dtStatus.Rows[i]["NodeNo"].ToString()">@dtStatus.Rows[i]["Name"].ToString()</option>
                        }
                        else
                        {
                            <option value="@dtStatus.Rows[i]["NodeNo"].ToString()">@dtStatus.Rows[i]["Name"].ToString()</option>
                        }
                    }
                }
            </select>
        </div>
    </div>
    <div class="row-fluid">
        <div class="span4" >
            <div style="display: none" id="divEffectiveDate">
                <label class="label1" for="dtEDate">Effective Date</label>
                <input placeholder="Effective Date" class="span12 mousetrap" name="dtEDate" id="dtEDate">
            </div>
        </div>
    </div>
    <div class="row-fluid">
        <div class="tabbable tabbable-bordered">
            <ul class="nav nav-tabs">
                <li class="active"><a href="#tab_br1" data-toggle="tab">Price Mapping</a></li>
                @*<li><a href="#tab_br3" data-toggle="tab">Additional Fields</a></li>*@
            </ul>
            <div class="tab-content">
                <div class="tab-pane active" id="tab_br1">
                    <div class="row-fluid">
                        <div class="span12">
                            <div class="pull-right"> 
                                <a data-toggle="modal" data-backdrop="static" href="#divModalPriceMapping" class="btn btn-default">Add Price Map</a> 
                            </div>
                        </div>
                    </div>

                </div>

                @*<div class="tab-pane" id="tab_br3">
                        <div class="row-fluid">
                            <div class="span6">
                                <label for="txtAdharNumber">Extra 1</label>
                                <input type="text" class="span6 form-control mousetrap" name="txtExtra1" id="txtExtra1" placeholder="Extra Field" value="@Model.Extra1">
                            </div>
                            <div class="span6">
                                <label for="txtAdharNumber">Extra 2</label>
                                <input type="text" class="span6 form-control mousetrap" name="txtExtra2" id="txtExtra2" placeholder="Extra Field" value="@Model.Extra2">
                            </div>
                        </div>

                        <div class="row-fluid">
                            <div class="span6">
                                <label for="txtAdharNumber">Extra 3</label>
                                <input type="text" class="span6 form-control mousetrap" name="txtExtra3" id="txtExtra3" placeholder="Extra Field" value="@Model.Extra3">
                            </div>
                            <div class="span6">
                                <label for="txtAdharNumber">Extra 4</label>
                                <input type="text" class="span6 form-control mousetrap" name="txtExtra4" id="txtExtra4" placeholder="Extra Field" value="@Model.Extra4">
                            </div>
                        </div>

                        <div class="row-fluid">
                            <div class="span6">
                                <label for="txtAdharNumber">Extra 5</label>
                                <input type="text" class="span6 form-control mousetrap" name="txtExtra5" id="txtExtra5" placeholder="Extra Field" value="@Model.Extra5">
                            </div>
                        </div>

                    </div>*@
            </div>
        </div>
    </div>

    <div class="modal hide fade" id="divModalPriceMapping">
        <div class="modal-header">
            <button class="close" data-dismiss="modal">×</button>
            <h3>Add Pricing</h3>
        </div>
        <div class="modal-body">
            <div class="row-fluid">
                <div class="span12">
                    <input id="drpWarehouse" class="mousetrap" />
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <a href="#" class="btn" data-dismiss="modal">Close</a>
        </div>
    </div>


</form>



<script type="text/javascript">


    $(function () {

        var EndDate = '';
        $("#dtEDate").kendoDatePicker({ format: "dd-MM-yyyy" });
        $("#dtEDate").val(getDate());

        function getDate() {
            var date = new Date();
            return date.getDate() + "-" + parseInt(date.getMonth() + 1) + "-" + date.getFullYear()
        }


        $("#drpStatus").on("change", function (e) {
            var selected = $(this).val();
            EndDate = $("#dtEDate").val();
            if (selected == "2") {
                $("#divEffectiveDate").slideDown();
            }
            else {
                $("#divEffectiveDate").slideUp();
            }
        });

        var createProduct = function () {
            var obj = {
                ProductID: $("#ProductID").val(),
                Code: $("#txtCode").val(),
                Name: $("#txtName").val(),
                ProductCategory: $("#drpCategory option:selected").val(),
                Status: $("#drpStatus option:selected").val(),
                Spec: $("#txtSpec").val(),
                efDate: $("#dtEDate").val(),
                Price:  $("#txtPrice").val()
            }
            return JSON.stringify(obj);
        }

        var _saveProducts = function () {
            if ($("#frmProducts").valid()) {
                $.ajax({
                    url: '/Masters/SaveProduct',
                    type: 'post',
                    data: { "Data": createProduct() },
                    beforeSend: function () {
                        $("#ajaxLoadingImg").show();

                    },
                    complete: function () { $("#ajaxLoadingImg").hide(); },
                    success: function (data) {
                        if (data > 0) {
                            if ($("#ProductID").val() > 0)
                                customAlert('Updated Successfully', 'alert', function () { $("#txtCode").focus(); });
                            else
                                customAlert('Created Successfully', 'alert', function () { $("#txtCode").focus(); });
                            clearContorls();
                        }
                        else {
                            customAlert('Error occured', 'alert');
                        }
                    },

                    error: function (e) { customAlert('Error occured', 'alert'); }
                });
            }
        };

        $("#btnSaveProduct").on("click", function (e) {
            e.preventDefault();
            _saveProducts();
        });

        $("#frmProducts").validate({
            rules: {
                txtCode: "required",
                txtName: "required",
                txtPrice: {
                    required: true,
                    greaterThanZero: true
                },
                drpCategory: {
                    required: true,
                    greaterThanZero: true
                },
                drpStatus: {
                    required: true,
                    greaterThanZero: true
                },
            },
            messages: {
                txtCode: "please enter product code",
                txtName: "please enter product name",
                drpCategory: "please select category.",
                drpStatus: "please select status.",
                txtPrice: "Price should be greater than zero."

            }
        });

        $("#btnClear").on("click", function (e) {
            e.preventDefault();
            clearContorls();
        });

        var clearContorls = function () {
            $("#ProductID").val('0');
            $("#txtCode").val('');
            $("#txtName").val('');
            $("#txtSpec").val('');
            $("#txtPrice").val('');

            $("#drpCategory").val('0');
            $("#drpStatus").val('1');

            $("#dtEDate").val(getDate());
            $("#drpStatus").change();
            $("#txtCode").focus();
        };
        if ('@Model.ProductID' > 0) {
            $("#drpStatus").change();
            $("#dtEDate").val('@Model.efDate');
        }


        $("#btnAddPriceMapping").on("click", function (e) {
            e.preventDefault();
           @*// $("#drpWarehouse").combogrid(@Html.Raw(Model.WareHouseOptions));*@

        });

        Mousetrap.bind(['ctrl+s', 'command+s'], function (e) {
            e.preventDefault();
            _saveProducts();
        });

        Mousetrap.bind(['ctrl+r', 'command+r'], function (e) {
            e.preventDefault();
            clearContorls();
        });

        Mousetrap.bind(['ctrl+h', 'command+h'], function (e) {
            e.preventDefault();
            window.location.href = '@Url.Action("Index", "Home")';
        });

        Mousetrap.bind(['ctrl+backspace', 'command+backspace'], function (e) {
            e.preventDefault();
            window.location.href = '@Url.Action("ProductsList", "Masters")';
        });

        Mousetrap.bind(['ctrl+r', 'command+r'], function (e) {
            e.preventDefault();
            clearContorls();
        });

        $("#txtCode").focus();
    });

</script>

