@using MAP.Inventory.Model;
@{
    ViewBag.Title = "OpeningStock";
    string Data = "[]";

    if (ViewBag.Data != "")
    {
        Data = ViewBag.Data;
    }
    SessionManager objSession = null;
    if (Session["SessionManager"] != null)
    {
        objSession = (SessionManager)Session["SessionManager"];
    }
}

<form class="cmxform" role="search">
    <div class="row-fluid heading">
        <div class="span12">
            <h2>List of Warehouses</h2>
        </div>
    </div>
    <div class="row-fluid">
        <div class="col-lg-12 span12">
            <div id="grid"></div>
        </div>
    </div>
</form>

<script id="template" type="text/x-kendo-template">
    @if (objSession.RoleFeatures != null && objSession.RoleFeatures.ContainsKey("AddWarehouse") && objSession.RoleFeatures["AddWarehouse"])
    {
        <a class="k-button" onclick="return toolbar_click()">ADD NEW WAREHOUSE</a>
    }
</script>

<script type="text/javascript">


    $(document).ready(function () {
        var Documents = @Html.Raw(Data);
        // Documents = getDocs();
        function getDocs() {
            $.ajax({
                url: '/Masters/LoadWarehouses',
                type: 'Get',
                async: false,
                success: function (res) {
                    Documents = JSON.parse(res);
                },
                error: function (e) { customAlert('error occured.', 'alert'); }
            });
            return Documents;
        }

        var dataSource = new kendo.data.DataSource({
            //pageSize: 8,
            data: Documents,
            autoSync: true,
            schema: {
                model: {
                    fields: {
                        id: { editable: false },
                        code: { type: "string", editable: false },
                        name: { type: "string", editable: false },
                        status: { type: "string", editable: false },
                    }
                }
            }
        });

        function gridDataBound(e) {
            var grid = e.sender;
            if (grid.dataSource.total() == 0) {
                var colCount = grid.columns.length;
                $(e.sender.wrapper)
                    .find('tbody')
                    .append('<tr class="kendo-data-row"><td colspan="' + colCount + '" class="no-data">No Data :( <br/>Add new <b>Warehouse<b></td></tr>');
            }
        };

        $("#grid").kendoGrid({
            dataSource: dataSource,
            pageable: false,
            //pageSize: 8,
            height: 500,
            sortable: true,
            filterable: true,
            toolbar: [
     { template: kendo.template($("#template").html()) }
            ],
            columns: [
                // { field: "id", title: "Doc No", width: "100px" },
                { field: "code", title: "Warehouse Code", width: "130px" },
                { field: "name", title: "Warehouse Name", width: "130px" },
                {
                    field: "status", title: "Status", width: "130px",
                    template: function (data) {
                        if (data.status == "1") {
                            return "Active";
                        }
                        else if (data.status == "2") { return "Inactive"; }
                    }
                }
                @if (objSession.RoleFeatures != null && objSession.RoleFeatures.ContainsKey("EditWarehouse") && objSession.RoleFeatures["EditWarehouse"])
                {

                  <text> ,{ command: { text: "Edit", name: "edit", click: onEdit }, title: " ", width: "100px" } </text>
                }
                
                @if (objSession.RoleFeatures != null && objSession.RoleFeatures.ContainsKey("DeleteWarehouse") && objSession.RoleFeatures["DeleteWarehouse"])
                {
                  <text> ,{
                                     command: {
                                         name: "Delete ", click: function(e) {
                                             e.preventDefault();
                                             var self = this;

                                             smoke.confirm("Are you sure, Do you want to delete.?", function(ev) {
                                                 if (ev) {
                                                     var tr = $(e.target).closest("tr");
                                                     var data = self.dataItem(tr);
                                                     $.ajax({
                                                         url: '/Masters/DeleteWarehouse',
                                                         type: 'POST',
                                                         data: { "ID": data.id },
                                                         beforeSend: function() {
                                                             $("#ajaxLoadingImg").show();
                                                         },
                                                         complete: function() { $("#ajaxLoadingImg").hide(); },
                                                         success: function(res) {
                                                             if (res > 0) {
                                                                 customAlert('Deleted Successfully.', 'alert');
                                                                 Documents = getDocs();
                                                                 var dataSource = new kendo.data.DataSource({ data: Documents });
                                                                 var grid = $('#grid').data("kendoGrid");
                                                                 dataSource.read();
                                                                 grid.setDataSource(dataSource);
                                                             }
                                                         },
                                                         error: function(e) { customAlert('error occured.', 'alert'); }
                                                     });//end ajax
                                                 }
                                             }, {
                                                 ok: "Yep",
                                                 cancel: "Nope",
                                                 classname: "custom-class",
                                                 reverseButtons: true
                                             });
                                         }

                                     }, title: " ", width: "100px"
                                 } </text>
                                         }
            ],
            editable: true,
            filterable: {
                extra: false, //do not show extra filters
                operators: { // redefine the string operators
                    string: {
                        contains: "Contains",
                        startswith: "Starts With",
                        eq: "Is Equal To"
                    }
                }
            },
            dataBound: gridDataBound
        });
    });
    Mousetrap.bind(['ctrl+a'], function (e) {
        e.preventDefault();
        toolbar_click();
    });

    function toolbar_click() {
        window.location.href = '/Masters/Warehouse';
    }

    function onEdit(e) {
        e.preventDefault();
        var tr = $(e.target).closest("tr");
        var data = this.dataItem(tr);
        window.location.href = "/Masters/UpDateWarehouse?ID=" + data.id;
    }


</script>
