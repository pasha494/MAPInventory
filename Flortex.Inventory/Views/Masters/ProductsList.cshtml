
@{
    ViewBag.Title = "Products";

    string Data = "[]";
    
    if(ViewBag.Data !="")
    {
        Data = ViewBag.Data;
    }
        
} 

<form class="cmxform" role="search">
    <div class="row-fluid">
        <div class="span12">
            <h2 class="subtitle">List of Products</h2>
        </div>
    </div>
    <div class="row-fluid">
        <div class="col-lg-12 span12">
            <div id="grid"></div>
        </div>
    </div>
</form>
<script id="template" type="text/x-kendo-template">
    <a class="btn btn-default k-button" onclick="return toolbar_click()">ADD NEW PRODUCT</a>
</script>

<script type="text/javascript">
    
    $(document).ready(function () {
         
        var Documents = @Html.Raw(Data)
        //var Documents = '@Html.Raw(Data)';
        //Documents = getDocs();
        function getDocs() {
            Documents = [];
            $.ajax({
                url: '/Masters/LoadProducts',
                type: 'Get',
                async: false,
                success: function (res) {
                    Documents = JSON.parse(res);
                },
                error: function (e) { customAlert('error occured.', 'alert'); }
            });
            return Documents;
        }

        var dataSource = new kendo.data.DataSource({
           // pageSize: 8,
            data: Documents,
            autoSync: true,
            schema: {
                model: {
                    fields: {
                        id: { editable: false },
                        code: { type: "string", editable: false },
                        name: { type: "string", editable: false },
                        category: { type: "string", editable: false },
                        status: { type: "string", editable: false },
                    }
                }
            }
        });

        function gridDataBound(e) {
            var grid = e.sender;
            if (grid.dataSource.total() == 0) {
                var colCount = grid.columns.length;
                $(e.sender.wrapper)
                    .find('tbody')
                    .append('<tr class="kendo-data-row"><td colspan="' + colCount + '" class="no-data">No Data :( <br/>Add new <b>Products<b></td></tr>');
            }
        };

        $("#grid").kendoGrid({
            dataSource: dataSource,
            pageable: false,
            //pageSize: 8,
            height: 700,
            sortable: true,
            filterable: true,
            toolbar: [
            { template: kendo.template($("#template").html()) }
            ],
            columns: [
                { field: "code", title: "Product Code", width: "130px" },
                { field: "name", title: "Product Name", width: "130px" },
                 { field: "category", title: "Product Category", width: "150px" },
                {
                    field: "status", title: "Admin", width: "80px",
                    template: function (data) {
                        if (data.status == "1") {
                            return "Active";
                        }
                        else if (data.status == "2") { return "Inactive"; }
                    }
                },
               { command: { text: "Edit", name: "edit", click: onEdit }, title: " ", width: "80px" },
               {
                   command: {
                       name: "Delete ", click: function (eve) {
                           eve.preventDefault();
                           var self = this; 
                           smoke.confirm("Are you sure, Do you want to delete.?", function (e) {
                               if (e) {
                                   var tr = $(eve.target).closest("tr");
                                   var data = self.dataItem(tr);
                                   $.ajax({
                                       url: '/Masters/DeleteProduct',
                                       type: 'POST',
                                       data: { "ID": data.id },
                                       beforeSend: function () {
                                           $("#ajaxLoadingImg").show();
                                       },
                                       complete: function () { $("#ajaxLoadingImg").hide(); },
                                       success: function (res) {
                                           if (res > 0) {
                                                
                                               customAlert('Deleted Successfully.', 'alert');
                                               var _Documents = getDocs();
                                               var dataSource = new kendo.data.DataSource({ data: _Documents });
                                               var grid = $('#grid').data("kendoGrid");
                                               dataSource.read();
                                               grid.setDataSource(dataSource);
                                           }
                                       },
                                       error: function (e) { customAlert('Error in Operation.', 'alert'); }
                                   });//end ajax
                               } 
                           }, {
                               ok: "Yes",
                               cancel: "No",
                               classname: "custom-class",
                               reverseButtons: true
                           }); 
                       }
                   }, title: " ", width: "100px"
               }
            ],
            editable: true,
            filterable: {
                extra: false, //do not show extra filters
                operators: { // redefine the string operators
                    string: {
                        contains: "Contains",
                        startswith: "Starts With",
                        eq: "Is Equal To"
                    }
                }
            },
            dataBound: gridDataBound
        });
    });

    Mousetrap.bind(['ctrl+a'], function (e) {
        e.preventDefault();
        toolbar_click();
    });

    function toolbar_click() {
        window.location.href = '/Masters/Products';
    }

    function onEdit(e) {
        e.preventDefault();
        var tr = $(e.target).closest("tr");
        var data = this.dataItem(tr);
        window.location.href = "/Masters/UpdateProduct?ID=" + data.id;
    }
 

</script>
